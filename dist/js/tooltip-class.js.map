{"version":3,"sources":["tooltip-class.js"],"names":["ToolTipClass","selector","options","document","querySelectorALL","forEach","element","index","setupToolTip","evt","info","target","dataset","tooltip","tt","querySelector","style","display","v5options","object","assign","color","ttData","console","log","v6options","fontWeight","newToolTip","classList","add","v5optoins","backgroundColor","backgroudColor","appendChild","addEventListener","handleMouseOver","handleMouseOut"],"mappings":";;;;;;;;;;;;;;IAAMA,Y;AAuDE,wBAAYC,QAAZ,EAAuBC,OAAvB,EAA+B;AAAA;;AAAA;;AAG3B;AACA;AACA;AACA;AACA;AACA;AAEA;AACAC,IAAAA,QAAQ,CAACC,gBAAT,CAA0BH,QAA1B,EAAoCI,OAApC,CAA4C,UAACC,OAAD,EAAUC,KAAV;AAAA,aAAoB,KAAI,CAACC,YAAL,CAAkBF,OAAlB,EAA2BC,KAA3B,EAAkCL,OAAlC,CAApB;AAAA,KAA5C;AACH;;;;WAjED,yBAAgBO,GAAhB,EAAoB;AAChB,UAAMC,IAAI,GAAGD,GAAG,CAACE,MAAJ,CAAWC,OAAX,CAAmBC,OAAhC;AACA,UAAMC,EAAE,GAAGL,GAAG,CAACE,MAAJ,CAAWI,aAAX,CAAyB,cAAzB,CAAX;AACAD,MAAAA,EAAE,CAACE,KAAH,CAASC,OAAT,GAAmB,OAAnB;AACH;;;WAED,wBAAeR,GAAf,EAAmB;AACf,UAAMK,EAAE,GAAGL,GAAG,CAACE,MAAJ,CAAWI,aAAX,CAAyB,cAAzB,CAAX;;AACA,UAAID,EAAJ,EAAO;AACHA,QAAAA,EAAE,CAACE,KAAH,CAASC,OAAT,GAAmB,MAAnB;AACH;AACJ;;;WAED,sBAAaX,OAAb,EAAuBC,KAAvB,EAA8BL,OAA9B,EAAsC;AAClC;AACA;AACA;AACA,UAAMgB,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAc;AAC5BC,QAAAA,KAAK,EAAC;AADsB,OAAd,EAEfnB,OAFe,EAENoB,MAFM,CAAlB;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAYN,SAAZ,EAPkC,CASlC;;AACA,UAAMO,SAAS;AACXJ,QAAAA,KAAK,EAAC,MADK;AAEXK,QAAAA,UAAU,EAAC;AAFA,SAIPxB,OAJO,GAKPoB,MALO,CAAf;;AAOAC,MAAAA,OAAO,CAACC,GAAR,CAAYC,SAAZ;AAEA,UAAMH,MAAM,GAAGhB,OAAO,CAACM,OAAvB;AACA,UAAMF,IAAI,GAAGY,MAAM,CAACK,UAApB;;AAEA,UAAIjB,IAAJ,EAAU;AACNJ,QAAAA,OAAO,CAACsB,SAAR,CAAkBC,GAAlB,CAAsB,YAAtB;;AAEA,YAAIC,SAAS,CAACT,KAAd,EAAoB;AAChBf,UAAAA,OAAO,CAACU,KAAR,CAAcK,KAAd,GAAsBnB,OAAO,CAACmB,KAA9B;AACH,SAFD,MAEO,IAAIC,MAAM,CAACD,KAAX,EAAkB;AACrBf,UAAAA,OAAO,CAACU,KAAR,CAAcK,KAAd,GAAsBH,SAAS,CAACa,eAAhC;AACH;;AACD,YAAID,SAAS,CAACE,cAAd,EAA6B;AACzB1B,UAAAA,OAAO,CAACU,KAAR,CAAcK,KAAd,GAAsBS,SAAS,CAACC,eAAhC;AACH;;AAEDzB,QAAAA,OAAO,CAAC2B,WAAR,CAAoBpB,OAApB;AACAP,QAAAA,OAAO,CAAC4B,gBAAR,CAAyB,WAAzB,EAAuC,KAAKC,eAA5C;AACA7B,QAAAA,OAAO,CAAC4B,gBAAR,CAAyB,UAAzB,EAAsC,KAAKE,cAA3C;AACH;AACJ","sourcesContent":["class ToolTipClass{\r\n    \r\n        handleMouseOver(evt){\r\n            const info = evt.target.dataset.tooltip;\r\n            const tt = evt.target.querySelector('tooltip-info');\r\n            tt.style.display = \"block\"\r\n        }\r\n\r\n        handleMouseOut(evt){\r\n            const tt = evt.target.querySelector('tooltip-info');\r\n            if (tt){\r\n                tt.style.display = \"none\"\r\n            }\r\n        }\r\n\r\n        setupToolTip(element , index, options){\r\n            // const info = element.getAttribute('data-tooltip');\r\n            //combine values from multiuple sources into one object \r\n            //es5 way =\r\n            const v5options = object.assign({\r\n                color:'4444'\r\n            }, options, ttData)\r\n            console.log(v5options)\r\n\r\n            //es6 way = \r\n            const v6options= {\r\n                color:'4444',\r\n                fontWeight:'bold',\r\n\r\n                ... options,\r\n                ... ttData,\r\n            }\r\n            console.log(v6options)\r\n\r\n            const ttData = element.dataset;\r\n            const info = ttData.newToolTip;\r\n\r\n            if (info) {\r\n                element.classList.add('tooltip-on')\r\n\r\n                if (v5optoins.color){\r\n                    element.style.color = options.color;\r\n                } else if (ttData.color) {\r\n                    element.style.color = v5options.backgroundColor;\r\n                }\r\n                if (v5optoins.backgroudColor){\r\n                    element.style.color = v5optoins.backgroundColor;\r\n                }\r\n\r\n                element.appendChild(tooltip)\r\n                element.addEventListener('mouseover' , this.handleMouseOver )\r\n                element.addEventListener('mouseout' , this.handleMouseOut )\r\n            }\r\n        }\r\n\r\n        constructor(selector , options){ \r\n            \r\n                \r\n            // console.log('init' , selector)\r\n            //function doA(paramA, paramB)\r\n            //var doA = (paramA, paramB) => {.....}\r\n            //var doA = (paramA, paramB) => oneline Optino body \r\n            //var doA = (paramA) => {.....}\r\n            //var doA = paramA => {.....}\r\n\r\n            // \r\n            document.querySelectorALL(selector).forEach((element, index) => this.setupToolTip(element, index, options))\r\n        }\r\n}\r\n\r\n"],"file":"tooltip-class.js"}
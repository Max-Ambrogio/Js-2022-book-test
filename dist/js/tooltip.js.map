{"version":3,"sources":["tooltip.js"],"names":["window","newTooltip","handleMouseOver","evt","info","target","dataset","tooltip","tt","querySelector","style","display","handleMouseOut","setupToolTip","element","index","options","v5options","object","assign","color","ttData","newToolTip","classList","add","v5optoins","backgroundColor","backgroudColor","init","selector","addEventListener","document","querySelectorALL","forEach"],"mappings":";;AACA,CAAC,YAAU;AAEPA,EAAAA,MAAM,CAACC,UAAP,GAAqB,YAAU;AAE3B,aAASC,eAAT,CAAyBC,GAAzB,EAA6B;AACzB,UAAMC,IAAI,GAAGD,GAAG,CAACE,MAAJ,CAAWC,OAAX,CAAmBC,OAAhC;AACA,UAAMC,EAAE,GAAGL,GAAG,CAACE,MAAJ,CAAWI,aAAX,CAAyB,cAAzB,CAAX;AACAD,MAAAA,EAAE,CAACE,KAAH,CAASC,OAAT,GAAmB,OAAnB;AACH;;AAED,aAASC,cAAT,CAAwBT,GAAxB,EAA4B;AACxB,UAAMK,EAAE,GAAGL,GAAG,CAACE,MAAJ,CAAWI,aAAX,CAAyB,cAAzB,CAAX;;AACA,UAAID,EAAJ,EAAO;AACHA,QAAAA,EAAE,CAACE,KAAH,CAASC,OAAT,GAAmB,MAAnB;AACH;AACJ;;AAED,aAASE,YAAT,CAAsBC,OAAtB,EAAgCC,KAAhC,EAAuCC,OAAvC,EAA+C;AAC3C;AACA;AACA;AACA,UAAMC,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAc;AAC5BC,QAAAA,KAAK,EAAC;AADsB,OAAd,EAEfJ,OAFe,EAENK,MAFM,CAAlB;AAIA,UAAMA,MAAM,GAAGP,OAAO,CAACR,OAAvB;AACA,UAAMF,IAAI,GAAGiB,MAAM,CAACC,UAApB;;AAEA,UAAIlB,IAAJ,EAAU;AACNU,QAAAA,OAAO,CAACS,SAAR,CAAkBC,GAAlB,CAAsB,YAAtB;;AAEA,YAAIC,SAAS,CAACL,KAAd,EAAoB;AAChBN,UAAAA,OAAO,CAACJ,KAAR,CAAcU,KAAd,GAAsBJ,OAAO,CAACI,KAA9B;AACH,SAFD,MAEO,IAAIC,MAAM,CAACD,KAAX,EAAkB;AACrBN,UAAAA,OAAO,CAACJ,KAAR,CAAcU,KAAd,GAAsBH,SAAS,CAACS,eAAhC;AACH;;AACD,YAAID,SAAS,CAACE,cAAd,EAA6B;AACzBb,UAAAA,OAAO,CAACJ,KAAR,CAAcU,KAAd,GAAsBK,SAAS,CAACC,eAAhC;AACH;AACJ;AACJ;;AAED,aAASE,IAAT,CAAcC,QAAd,EAAyBb,OAAzB,EAAiC;AAEzBF,MAAAA,OAAO,CAACgB,gBAAR,CAAyB,WAAzB,EAAuC5B,eAAvC;AACAY,MAAAA,OAAO,CAACgB,gBAAR,CAAyB,UAAzB,EAAsClB,cAAtC,EAHyB,CAI7B;AACA;AACA;AACA;AACA;AACA;AAEA;;AACAmB,MAAAA,QAAQ,CAACC,gBAAT,CAA0BH,QAA1B,EAAoCI,OAApC,CAA4C,UAACnB,OAAD,EAAUC,KAAV;AAAA,eAAoBF,YAAY,CAACC,OAAD,EAAUC,KAAV,EAAiBC,OAAjB,CAAhC;AAAA,OAA5C;AACH;;AAED,WAAO;AACHY,MAAAA,IAAI,EAAEA;AADH,KAAP;AAGH,GA1DmB,EAApB;AA4DH,CA9DD,I,CAgEA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA","sourcesContent":["\r\n(function(){\r\n  \r\n    window.newTooltip = (function(){\r\n\r\n        function handleMouseOver(evt){\r\n            const info = evt.target.dataset.tooltip;\r\n            const tt = evt.target.querySelector('tooltip-info');\r\n            tt.style.display = \"block\"\r\n        }\r\n\r\n        function handleMouseOut(evt){\r\n            const tt = evt.target.querySelector('tooltip-info');\r\n            if (tt){\r\n                tt.style.display = \"none\"\r\n            }\r\n        }\r\n\r\n        function setupToolTip(element , index, options){\r\n            // const info = element.getAttribute('data-tooltip');\r\n            //combine values from multiuple sources into one object \r\n            //es5 way =\r\n            const v5options = object.assign({\r\n                color:'4444'\r\n            }, options, ttData)\r\n\r\n            const ttData = element.dataset;\r\n            const info = ttData.newToolTip;\r\n\r\n            if (info) {\r\n                element.classList.add('tooltip-on')\r\n\r\n                if (v5optoins.color){\r\n                    element.style.color = options.color;\r\n                } else if (ttData.color) {\r\n                    element.style.color = v5options.backgroundColor;\r\n                }\r\n                if (v5optoins.backgroudColor){\r\n                    element.style.color = v5optoins.backgroundColor;\r\n                }\r\n            }\r\n        }\r\n\r\n        function init(selector , options){ \r\n            \r\n                element.addEventListener('mouseover' , handleMouseOver )\r\n                element.addEventListener('mouseout' , handleMouseOut )\r\n            // console.log('init' , selector)\r\n            //function doA(paramA, paramB)\r\n            //var doA = (paramA, paramB) => {.....}\r\n            //var doA = (paramA, paramB) => oneline Optino body \r\n            //var doA = (paramA) => {.....}\r\n            //var doA = paramA => {.....}\r\n\r\n            // \r\n            document.querySelectorALL(selector).forEach((element, index) => setupToolTip(element, index, options))\r\n        }\r\n\r\n        return {\r\n            init: init\r\n        }\r\n    })();\r\n\r\n})();\r\n\r\n// const spans = document.querySelectorAll('span');\r\n// const toolTip = element.getAttribute('data-tooltip');\r\n\r\n// const location = element.getBoundingClientRect();\r\n\r\n// makeClass(spans);\r\n\r\n// const toolData = createDiv(spans)\r\n// element.prepend(toolData)\r\n// // element.addEventListener(\"click\" , toolData)\r\n// console.log(spans)\r\n// console.log(toolTip)\r\n//progressive enhancement. \r\n/* \r\n\r\n\r\n*/\r\n"],"file":"tooltip.js"}